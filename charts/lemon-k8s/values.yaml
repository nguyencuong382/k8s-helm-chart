global:
  project: ""
  image:
    registry: docker.io
    pullPolicy: IfNotPresent
    pullSecret: ""
  labels: {}

service:
  ports:
    - name: http
      value: 80

deployment:
  replicaCount: 1
  containers:
    - name: main
      repository: your-image-repo/lemon-k8s
      tag: latest
      resources:
        limits:
          cpu: 1000m
          memory: 1280Mi
        requests:
          cpu: 100m
          memory: 128Mi

    - name: sidecar
      repository: busybox
      tag: latest
      resources:
        limits:
          cpu: 1000m
          memory: 1280Mi
        requests:
          cpu: 100m
          memory: 128Mi
  # livenessHttpGet: "/health-check"
  # readinessHttpGet: "/health-check"
  # failureThreshold: 3
  # initialDelaySeconds: 0
  labels: {}
  volumes: {}
  volumeMounts: {}
  # envFrom: {}
  environments:
    HELM_CHART_NAME: lemon-k8s

secrets:
  enabled: false
  values:
    - name: ""
      data:
        # SAMPLE_ENV: "ENV_VALUE"

ingress:
  enabled: false
  ingressClassName: nginx
  annotations:
    # decrepcated
    # kubernetes.io/ingress.class: nginx
    # ingress.kubernetes.io/ssl-redirect: "False"
    # nginx.org/websocket-services: svc-1
  rules:
    - host:
      paths:
        - path: /
          port: 80
  # tls:
  #   - secretName:
  #     hosts:
  #       -

nodeSelector: {}

tolerations: []

affinity: {}

securityContext: {}

pvc:
  enabled: false
  # name: "lemon"
  # storage: 5Gi
  # storageClassName: storage-class-name
  # accessMode: ReadWriteOnce
  # mountPath: ""

pv:
  enabled: false
  # name: "lemon"
  # storage: 5Gi
  # storageClassName: storage-class-name
  # accessMode: ReadWriteOnce
  # nfs:
  #   path: ""
  #   server: ""
